{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "group": "Template settings",
        "description": "The name of the administrator account of the new VMs and Domain"
      },
      "defaultValue": "vmadmin"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "group": "Template settings",
        "description": "The password for the administrator account of the new VMs and Domain"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "https://raw.githubusercontent.com/CIThunderChicken/ThunderChicken/servicemodular/service-template",
      "metadata": {
        "group": "Template settings",
        "description": "Location of the artifacts"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "group": "Template settings",
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "defaultValue": ""
    },
    "template": {
      "type": "string",
      "defaultValue": "None",
      "allowedValues": [
        "None",
        "AD-DS-DNS",
        "SCOM",
        "SQL",
        "FileServer",
        "DHCP",       
        "SharePoint",
        "Exchange",
        "AirWatch",        
        "Skype"
      ],
      "metadata": {
        "group": "Lab Enviornment Template",
        "description": "Indicates Which enviornment to build"
      }
    }
  },
  "variables": {
    "template": "[parameters('template')]",
    "location": "[resourceGroup().location]",
    "templates": {
      "None": {
        "prefix": "blank",
        "servers": [
          {
            "size": "S",
            "subnet": "[variables('VSubnetName')]"
          }
        ]
      },
      "AD-DS-DNS": {
        "prefix": "DS",
        "servers": [
          {
            "size": "S",
            "subnet": "[variables('VSubnetName')]"
          },
          {
            "size": "S",
            "subnet": "[variables('VSubnetName')]"
          }
        ]
      },
      "SCOM": {
        "prefix": "scom",
        "servers": [
          {
            "hostname": "VS201",
            "size": "L",
            "subnet": "[variables('VSubnetName')]",
            "ip": "10.0.0.10"
          },
          {
            "hostname": "VS202",
            "size": "L",
            "subnet": "[variables('VSubnetName')]",
            "ip": "10.0.0.11"
          },{
            "hostname": "CS201",
            "size": "L",
            "subnet": "[variables('CSubnetName')]",
            "ip": "10.0.2.12"
          },
          {
            "hostname": "CS202",
            "size": "L",
            "subnet": "[variables('CSubnetName')]",
            "ip": "10.0.2.13"
          },
          {
            "hostname": "KS201",
            "size": "L",
            "subnet": "[variables('KSubnetName')]",
            "ip": "10.0.1.14"
          },
          {
            "hostname": "KS202",
            "size": "L",
            "subnet": "[variables('KSubnetName')]",
            "ip": "10.0.1.15"
          }
        ]
      },      
      "SQL": {
        "prefix": "sql",
        "servers": [
          {
            "size": "S",
            "subnet": "[variables('VSubnetName')]"
          },
          {
            "size": "S",
            "subnet": "[variables('KSubnetName')]"
          }
        ]
      },
      "FileServer": {
        "prefix": "fs",
        "servers": [
          {
            "size": "S",
            "subnet": "[variables('VSubnetName')]"
          },
          {
            "size": "S",
            "subnet": "[variables('VSubnetName')]"
          }
        ]
      },
      "DHCP": {
        "prefix": "dhcp",
        "servers": [
          {
            "hostname": "VS203",
            "size": "M",
            "subnet": "[variables('VSubnetName')]",
            "ip": "10.0.0.25"
          }
        ]
      },
      "SharePoint": {
        "prefix": "sp",
        "servers": [
          {
            "hostname": "CP201",
            "size": "L",
            "subnet": "[variables('CSubnetName')]",
            "ip": "10.0.2.35"
          },
          {
            "hostname": "CP202",
            "size": "L",
            "subnet": "[variables('CSubnetName')]",
            "ip": "10.0.2.36"
          },
          {
            "hostname": "CP203",
            "size": "L",
            "subnet": "[variables('CSubnetName')]",
            "ip": "10.0.2.37"
          },
          {
            "hostname": "CP204",
            "size": "XL",
            "subnet": "[variables('CSubnetName')]",
            "ip": "10.0.2.38"
          },
          {
            "hostname": "CP205",
            "size": "XL",
            "subnet": "[variables('CSubnetName')]",
            "ip": "10.0.2.39"
          },
          {
            "hostname": "CP206",
            "size": "L",
            "subnet": "[variables('CSubnetName')]",
            "ip": "10.0.2.40"
          },
          {
            "hostname": "KP201",
            "size": "L",
            "subnet": "[variables('KSubnetName')]",
            "ip": "10.0.1.41"
          },
          {
            "hostname": "KP202",
            "size": "L",
            "subnet": "[variables('KSubnetName')]",
            "ip": "10.0.1.42"
          },
          {
            "hostname": "KP203",
            "size": "L",
            "subnet": "[variables('KSubnetName')]",
            "ip": "10.0.1.43"
          },
          {
            "hostname": "KP204",
            "size": "XL",
            "subnet": "[variables('KSubnetName')]",
            "ip": "10.0.1.44"
          },
          {
            "hostname": "KP205",
            "size": "XL",
            "subnet": "[variables('KSubnetName')]",
            "ip": "10.0.1.45"
          },
          {
            "hostname": "KP206",
            "size": "L",
            "subnet": "[variables('KSubnetName')]",
            "ip": "10.0.1.46"
          },
          {
            "hostname": "KP209",
            "size": "L",
            "subnet": "[variables('KSubnetName')]",
            "ip": "10.0.1.47"
          }          
        ]
      },
      "Exchange": {
        "prefix": "ex",
        "servers": [
          {
            "size": "S",
            "subnet": "[variables('VSubnetName')]"
          },
          {
            "size": "S",
            "subnet": "[variables('VSubnetName')]"
          }
        ]
      },
      "AirWatch": {
        "prefix": "aw",
        "servers": [
          {
            "size": "S",
            "subnet": "[variables('VSubnetName')]"
          },
          {
            "size": "S",
            "subnet": "[variables('VSubnetName')]"
          }
        ]
      },
      "Skype": {
        "prefix": "sky",
        "servers": [
          {
            "size": "S",
            "subnet": "[variables('VSubnetName')]"
          },
          {
            "size": "S",
            "subnet": "[variables('KSubnetName')]"
          }
        ]
      }
     
    },
    "templatePrefix": "[variables('templates')[variables('template')].prefix]",
    "mastertemplatePrefix": "master",
    "domainName": "Domain.com",
    "domainNetbiosName": "LAB",
    "domainNameDMZ": "DomainDmz.com",
    "domainNetbiosNameDMZ": "LABDMZ",
    "RetryCount": "100",
    "RetryIntervalSec": "30",
    "storageAccountNamePrefix": "[concat(variables('mastertemplatePrefix'), uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat(variables('mastertemplatePrefix'), '-vn')]",
    "VSubnetName": "vs",
    "KSubnetName": "ks",
    "CSubnetName": "cs",
    "KDMZSubnetName": "kdmz",
    "CDMZSubnetName": "cdmz",
    "dc1NicIPAddress": "10.0.0.5",
    "dc2NicIPAddress": "10.0.1.5",
    "dc3NicIPAddress": "10.0.2.5",
    "dmzdc1NicIPAddress": "10.0.3.5",
    "dmzdc2NicIPAddress": "10.0.4.5",
    "subnets": {
      "[variables('VSubnetName')]": {
        "name": "[variables('VSubnetName')]",
        "domain": "[variables('domainName')]",
        "dns": "[variables('dc1NicIPAddress')]"
      },
      "[variables('KSubnetName')]": {
        "name": "[variables('KSubnetName')]",
        "domain": "[variables('domainName')]",
        "dns": "[variables('dc2NicIPAddress')]"
      },
      "[variables('CSubnetName')]": {
        "name": "[variables('CSubnetName')]",
        "domain": "[variables('domainName')]",
        "dns": "[variables('dc3NicIPAddress')]"
      },
      "[variables('KDMZSubnetName')]": {
        "name": "[variables('KDMZSubnetName')]",
        "domain": "[variables('domainNameDMZ')]",
        "dns": "[variables('dmzdc1NicIPAddress')]"
      },
      "[variables('CDMZSubnetName')]": {
        "name": "[variables('CDMZSubnetName')]",
        "domain": "[variables('domainNameDMZ')]",
        "dns": "[variables('dmzdc2NicIPAddress')]"
      }
    },    
    "imageReference": {
      "publisher": "MicrosoftWindowsServer",
      "offer": "WindowsServer",
      "sku": "2016-Datacenter",
      "version": "latest"
    },
    "dscModulePrepare": {
      "url": "[concat(parameters('_artifactsLocation'),'/','dsc','/','PrepareVms.ps1.zip')]",
      "script": "PrepareVms.ps1",
      "function": "PrepareVms"
    },
    "virtualMachineSizeArray": {
      "S": "Standard_D1_v2",
      "M": "Standard_D2_v2",
      "L": "Standard_D3_v2",  
      "XL": "Standard_D4_v2"  
    },
    "subnetMap": {
      "V": "[variables('VSubnetName')]",
      "K": "[variables('KSubnetName')]",
      "C": "[variables('CSubnetName')]",  
      "KD": "[variables('KDMZSubnetName')]", 
      "CD": "[variables('CDMZSubnetName')]"  
    }
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('templatePrefix'), '-', variables('templates')[variables('template')].servers[copyIndex()].hostname, '-nic')]",
      "location": "[variables('location')]",
      "condition": "[greater(length(variables('templates')[variables('template')].servers), 0)]",
      "copy": {
        "name": "nicLoop",
        "count": "[length(variables('templates')[variables('template')].servers)]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat(variables('templatePrefix'), '-', variables('templates')[variables('template')].servers[copyIndex()].subnet, '-', 'ipconfig', add(copyIndex(), 1))]",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', variables('virtualNetworkName'), variables('templates')[variables('template')].servers[copyIndex()].subnet)]"
              },
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[if(equals('Static', 'Static'), variables('templates')[variables('template')].servers[copyIndex()].ip, json('null'))]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('templates')[variables('template')].servers[copyIndex()].hostname]",
      "location": "[variables('location')]",
      "condition": "[greater(length(variables('templates')[variables('template')].servers), 0)]",
      "dependsOn": [
        "[resourceId(resourceGroup().name,'Microsoft.Network/networkInterfaces', concat(variables('templatePrefix'), '-', variables('templates')[variables('template')].servers[copyIndex()].hostname, '-nic'))]"
      ],
      "copy": {
        "name": "vmLoop",
        "count": "[length(variables('templates')[variables('template')].servers)]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('virtualMachineSizeArray')[variables('templates')[variables('template')].servers[copyIndex()].size]]"
        },
        "osProfile": {
          "computerName": "[variables('templates')[variables('template')].servers[copyIndex()].hostname]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imageReference').publisher]",
            "offer": "[variables('imageReference').offer]",
            "sku": "[variables('imageReference').sku]",
            "version": "[variables('imageReference').version]"
          },
          "osDisk": {
            "name": "[concat(variables('templatePrefix'), '-', variables('templates')[variables('template')].servers[copyIndex()].hostname, '_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "[concat(variables('templatePrefix'), '-', variables('templates')[variables('template')].servers[copyIndex()].hostname, '_DataDisk1')]",
              "caching": "None",
              "createOption": "Empty",
              "diskSizeGB": "128",
              "lun": 0
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId(resourceGroup().name,'Microsoft.Network/networkInterfaces', concat(variables('templatePrefix'), '-', variables('templates')[variables('template')].servers[copyIndex()].hostname, '-nic'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',variables('storageAccountNamePrefix'),'.blob.core.windows.net')]"
          }
        }
      },
      "resources": [
        {
          "apiVersion": "[providers('Microsoft.DevTestLab','labs').apiVersions[0]]",
          "type": "microsoft.devtestlab/schedules",
          "name": "[concat('shutdown-computevm-', variables('templates')[variables('template')].servers[copyIndex()].hostname)]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('templates')[variables('template')].servers[copyIndex()].hostname)]"
          ],
          "properties": {
            "status": "Enabled",
            "taskType": "ComputeVmShutdownTask",
            "dailyRecurrence": {
              "time": "1900"
            },
            "timeZoneId": "Pacific Standard Time",
            "notificationSettings": {
              "status": "Disabled",
              "timeInMinutes": 15
            },
            "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', variables('templates')[variables('template')].servers[copyIndex()].hostname)]"
          }
        },
        {
          "type": "extensions",
          "name": "Microsoft.Powershell.DSC",
          "apiVersion": "2015-05-01-preview",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines/', variables('templates')[variables('template')].servers[copyIndex()].hostname)]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.20",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "configuration": {
                "url": "[variables('dscModulePrepare').url]",
                "script": "[variables('dscModulePrepare').script]",
                "function": "[variables('dscModulePrepare').function]"
              },
              "configurationArguments": {
                "domainName": "[variables('subnets')[variables('templates')[variables('template')].servers[copyIndex()].subnet].domain]",
                "dnsServer": "[variables('subnets')[variables('templates')[variables('template')].servers[copyIndex()].subnet].dns]",
                "RetryCount": "[variables('RetryCount')]",
                "RetryIntervalSec": "[variables('RetryIntervalSec')]"
              }
            },
            "protectedSettings": {
              "configurationUrlSasToken": "[parameters('_artifactsLocationSasToken')]",
              "configurationArguments": {
                "DomainAdminCredential": {
                  "UserName": "[concat(variables('domainNetbiosName'), '\\', parameters('adminUserName'))]",
                  "Password": "[parameters('adminPassword')]"
                }
              }
            }
          }
        }
      ]
    }
  ],
  "outputs": {
    "template": {
      "type": "string",
      "value": "[parameters('template')]"
    }   
  }
}