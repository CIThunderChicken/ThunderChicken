{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "group": "Template settings",
        "description": "The name of the administrator account of the new VMs and Domain"
      },
      "defaultValue": "vmadmin"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "group": "Template settings",
        "description": "The password for the administrator account of the new VMs and Domain"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "group": "Template settings",
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "defaultValue": ""
    },    
    "VirtualMachineSizes": {
      "type": "string",
      "allowedValues": [
        "Small",
        "Medium",
        "Large",
        "Default"
      ],
      "metadata": {
        "group": "Template Settings",
        "description": "Builds virtual machine to T-Shirt size: Small: 1 Core, Medium:4 Core: Large: 8 Cores, RegularTemplate: size defined in Service Templates"
      }
    },

    "DiskSizes": {
      "type": "string",     
      "allowedValues": [
        "Small-2GB",
        "Medium-20GB",
        "Large-50GB",        
        "Default"
      ],
      "metadata": {
        "group": "Template Settings",
        "description": "Builds virtual machine to T-Shirt size: Small: 1 Core, Medium:4 Core: Large: 8 Cores, Default: Attach individual disks for each drive letter and very costly"
      }
    },
    "VMSeries": {
      "type": "string",
      "metadata": {
        "group": "Template Settings",
        "description": "Defines VM Series - CPU and memory allocation"
      }
    },
    "domainname": {
      "type": "securestring",
      "metadata": {
        "group": "Template settings",
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      }
    },
    "domainNetbiosName": {
      "type": "securestring",
      "metadata": {
        "group": "Template settings",
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      }
    },
    "forestMode": {
      "type": "string",
      "defaultValue": "Win2012R2",
      "allowedValues": [
        "Win2008",
        "Win2008R2",
        "Win2012",
        "Win2012R2",
        "WinThreshold"
      ],
      "metadata": {
        "group": "Settings",
        "description": "Domain Controller Functionning Level"
      }
    }
  },
  "variables": {
    "templatePrefix": "master",
    "location": "[resourceGroup().location]",
    "domainName": "[parameters('domainName')]",
    "domainNetbiosName": "[parameters('domainNetbiosName')]",
    "forestMode": "[parameters('forestMode')]",
    "fileShareSAAccount": "[concat('share', substring(replace(subscription().subscriptionId,'-', ''), 0, 19))]",
    "shareResourceGroupName": "TCShare",
    "fileShare": "share",    
    "RetryCount": 150,
    "RetryIntervalSec": 30,
    "storageAccountNamePrefix": "[concat(variables('templatePrefix'), uniqueString(resourceGroup().id))]",
    "VSubnetName": "vs",
    "KSubnetName": "ks",
    "CSubnetName": "cs",
    "VSubnetPrefix": "10.0.0.0/24",
    "KSubnetPrefix": "10.0.1.0/24",
    "CSubnetPrefix": "10.0.2.0/24",
    "sites": [
      {
        "name": "[toUpper(variables('VSubnetName'))]",
        "prefix": "[variables('VSubnetPrefix')]",
        "sitelink": "[concat(toUpper(variables('KSubnetName')),',',toUpper(variables('VSubnetName')))]"
      },
      {
        "name": "[toUpper(variables('KSubnetName'))]",
        "prefix": "[variables('KSubnetPrefix')]",
        "sitelink": "[concat(toUpper(variables('KSubnetName')),',',toUpper(variables('CSubnetName')))]"        
      },
      {
        "name": "[toUpper(variables('CSubnetName'))]",
        "prefix": "[variables('CSubnetPrefix')]",        
        "sitelink": "[concat(toUpper(variables('CSubnetName')),',',toUpper(variables('VSubnetName')))]"        
      }
    ],
    "datadisks": [      
      {              
        "name": "DirectoryLogs",
        "diskSizeGB": 50,
        "letter": "E"              
      },
      {              
        "name": "FileShare",
        "diskSizeGB": 100,
        "letter": "F"              
      }
    ],
    "virtualMachineSizeArraySeries": {
      "Bs-Series" : { 
        "S": "Standard_B2s",
        "M": "Standard_B2ms",
        "L": "Standard_B4ms",
        "XL": "Standard_B8ms"
      },
      "Dv2-Series" : {
        "S": "Standard_D1_v2",
        "M": "Standard_D2_v2",
        "L": "Standard_D3_v2",
        "XL": "Standard_D4_v2"
      },
      "Dv3-Series" : {
        "S": "Standard_D1_v2",
        "M": "Standard_D2_v3",
        "L": "Standard_D4_v3",
        "XL": "Standard_D8_v3"
      }
    },
    "dc1VMName": "VD201",    
    "dc1NicName": "[concat(variables('templatePrefix'), '-' , variables('dc1VMName'), '-nic')]",
    "dc1NicIPAddress": "10.0.0.5",
    "dc2VMName": "KD201",
    "dc2NicName": "[concat(variables('templatePrefix'), '-' , variables('dc2VMName'), '-nic')]",    
    "dc2NicIPAddress": "10.0.1.5",
    "dc3VMName": "CD201",
    "dc3NicName": "[concat(variables('templatePrefix'), '-' , variables('dc3VMName'), '-nic')]",    
    "dc3NicIPAddress": "10.0.2.5",
    "virtualMachineSize": "Standard_B2s",
    "dcPrimaryInstallModule": {
      "url": "[concat(parameters('_artifactsLocation'),'/','dsc','/','CreatePrimaryDC.ps1.zip')]",
      "script": "CreatePrimaryDC.ps1",
      "function": "CreatePrimaryDC"
    },
    "dcSecondaryInstallModule": {
      "url": "[concat(parameters('_artifactsLocation'),'/','dsc','/','ProvisionReplicaDCs.ps1.zip')]",
      "script": "ProvisionReplicaDCs.ps1",
      "function": "ProvisionReplicaDCs"
    }
  },
  "resources": [
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('dc1VMName')]",
      "location": "[variables('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('virtualMachineSizeArraySeries')[parameters('VMSeries')].S]"
        },
        "osProfile": {
          "computerName": "[variables('dc1VMName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter-smalldisk",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('dc1VMName'),'_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {                 
              "storageAccountType": "Standard_LRS"
            }
          },
          "copy": [
            {
              "name": "dataDisks",
              "count": "[if(not(equals(parameters('DiskSizes'), 'Default')), 1, length(variables('datadisks')) )]",
              "input": {
                "name": "[if(not(equals(parameters('DiskSizes'), 'Default')), concat(variables('dc1VMName'), '_DataDisk'), concat(variables('dc1VMName'),'_DataDisk_', variables('datadisks')[copyIndex('dataDisks')].letter, '_', replace(variables('datadisks')[copyIndex('dataDisks')].name,' ','_')) )]",
                "diskSizeGB": "[if(not(equals(parameters('DiskSizes'), 'Default')), 32, int(variables('datadisks')[copyIndex('dataDisks')].diskSizeGB))]",
                "lun": "[copyIndex('dataDisks')]",
                "createOption": "Empty",
                "managedDisk": {                 
                  "storageAccountType": "Standard_LRS"
                }
              }
            }
          ]
          
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('dc1NicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',variables('storageAccountNamePrefix'),'.blob.core.windows.net')]"
          }
        }
      },
      "resources": [
        {
          "apiVersion": "[providers('Microsoft.DevTestLab','labs').apiVersions[0]]",
          "type": "microsoft.devtestlab/schedules",
          "name": "[concat('shutdown-computevm-',variables('dc1VMName'))]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('dc1VMName'))]"
          ],
          "properties": {
            "status": "Enabled",
            "taskType": "ComputeVmShutdownTask",
            "dailyRecurrence": {
             "time": "1800"
            },
            "timeZoneId": "Pacific Standard Time",
            "notificationSettings": {
              "status": "Disabled",
              "timeInMinutes": 15
            },
            "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', variables('dc1VMName'))]"
          }
        },
        {
          "type": "extensions",
          "name": "Microsoft.Powershell.DSC",
          "apiVersion": "2015-05-01-preview",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('dc1VMName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.20",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "configuration": {
                "url": "[variables('dcPrimaryInstallModule').url]",
                "script": "[variables('dcPrimaryInstallModule').script]",
                "function": "[variables('dcPrimaryInstallModule').function]"
              },
              "configurationArguments": {
                "DiskSize": "[parameters('DiskSizes')]",
                "DisksizeGB": "5",
                "domainName": "[variables('domainName')]",
                "domainNetbiosName": "[variables('domainNetbiosName')]",                
                "dnsServer": "[variables('dc1NicIPAddress')]",
                "dataDisks": "[string(variables('datadisks'))]",
                "sites": "[string(variables('sites'))]",
                "forestMode": "[variables('forestMode')]",
                "SourcePath" : "[concat('\\\\', variables('fileShareSAAccount'), '.file.core.windows.net', '\\', 'share')]",
                "RetryCount": "[variables('RetryCount')]",
                "RetryIntervalSec": "[variables('RetryIntervalSec')]",                
                "ConfigurationMode" : "ApplyAndAutoCorrect",
                "ConfigurationModeFrequencyMins" : 15
              }
            },
            "protectedSettings": {
              "configurationUrlSasToken": "[parameters('_artifactsLocationSasToken')]",
              "configurationArguments": {
                "DomainAdminCredential": {
                  "UserName": "[concat(variables('domainNetbiosName'), '\\', parameters('adminUserName'))]",
                  "Password": "[parameters('adminPassword')]"
                },
                "AzureShareCredential": {
                  "UserName": "[concat('Azure', '\\', variables('fileShareSAAccount'))]",
                  "Password": "[listKeys(resourceId(variables('shareResourceGroupName'), 'Microsoft.Storage/storageAccounts', variables('fileShareSAAccount')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
                }
              }
            }
          }
        }
      ]
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('dc2VMName')]",
      "location": "[variables('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('virtualMachineSizeArraySeries')[parameters('VMSeries')].S]"
        },
        "osProfile": {
          "computerName": "[variables('dc2VMName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter-smalldisk",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('dc2VMName'),'_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {                 
              "storageAccountType": "Standard_LRS"
            }
          },
          "copy": [
            {
              "name": "dataDisks",
              "count": "[if(not(equals(parameters('DiskSizes'), 'Default')), 1, length(variables('datadisks')) )]",
              "input": {
                "name": "[if(not(equals(parameters('DiskSizes'), 'Default')), concat(variables('dc2VMName'), '_DataDisk'), concat(variables('dc2VMName'),'_DataDisk_', variables('datadisks')[copyIndex('dataDisks')].letter, '_', replace(variables('datadisks')[copyIndex('dataDisks')].name,' ','_')) )]",
                "diskSizeGB": "[if(not(equals(parameters('DiskSizes'), 'Default')), 32, int(variables('datadisks')[copyIndex('dataDisks')].diskSizeGB))]",
                "lun": "[copyIndex('dataDisks')]",
                "createOption": "Empty",
                "managedDisk": {                 
                  "storageAccountType": "Standard_LRS"
                }
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('dc2NicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',variables('storageAccountNamePrefix'),'.blob.core.windows.net')]"
          }
        }
      },
      "resources": [
        {
          "apiVersion": "[providers('Microsoft.DevTestLab','labs').apiVersions[0]]",
          "type": "microsoft.devtestlab/schedules",
          "name": "[concat('shutdown-computevm-',variables('dc2VMName'))]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('dc2VMName'))]"
          ],
          "properties": {
            "status": "Enabled",
            "taskType": "ComputeVmShutdownTask",
            "dailyRecurrence": {
             "time": "1800"
            },
            "timeZoneId": "Pacific Standard Time",
            "notificationSettings": {
              "status": "Disabled",
              "timeInMinutes": 15
            },
            "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', variables('dc2VMName'))]"
          }
        },
        {
          "type": "extensions",
          "name": "Microsoft.Powershell.DSC",
          "apiVersion": "2015-05-01-preview",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('dc2VMName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.20",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "configuration": {
                "url": "[variables('dcSecondaryInstallModule').url]",
                "script": "[variables('dcSecondaryInstallModule').script]",
                "function": "[variables('dcSecondaryInstallModule').function]"
              },
              "configurationArguments": {
                "DiskSize": "[parameters('DiskSizes')]",
                "DisksizeGB": "5",
                "domainName": "[variables('domainName')]",                
                "dnsServer": "[variables('dc1NicIPAddress')]",
                "dataDisks": "[string(variables('datadisks'))]",
                "site": "[toUpper(variables('KSubnetName'))]",
                "RetryCount": "[variables('RetryCount')]",
                "RetryIntervalSec": "[variables('RetryIntervalSec')]"
              }
            },
            "protectedSettings": {
              "configurationUrlSasToken": "[parameters('_artifactsLocationSasToken')]",
              "configurationArguments": {
                "DomainAdminCredential": {
                  "UserName": "[concat(variables('domainNetbiosName'), '\\', parameters('adminUserName'))]",
                  "Password": "[parameters('adminPassword')]"
                }
              }
            }
          }
        }
      ]
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('dc3VMName')]",
      "location": "[variables('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('virtualMachineSizeArraySeries')[parameters('VMSeries')].S]"
        },
        "osProfile": {
          "computerName": "[variables('dc3VMName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter-smalldisk",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('dc3VMName'),'_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {                 
              "storageAccountType": "Standard_LRS"
            }
          },
          "copy": [
            {
              "name": "dataDisks",
              "count": "[if(not(equals(parameters('DiskSizes'), 'Default')), 1, length(variables('datadisks')) )]",
              "input": {
                "name": "[if(not(equals(parameters('DiskSizes'), 'Default')), concat(variables('dc3VMName'), '_DataDisk'), concat(variables('dc3VMName'),'_DataDisk_', variables('datadisks')[copyIndex('dataDisks')].letter, '_', replace(variables('datadisks')[copyIndex('dataDisks')].name,' ','_')) )]",
                "diskSizeGB": "[if(not(equals(parameters('DiskSizes'), 'Default')), 32, int(variables('datadisks')[copyIndex('dataDisks')].diskSizeGB))]",
                "lun": "[copyIndex('dataDisks')]",
                "createOption": "Empty",
                "managedDisk": {                 
                  "storageAccountType": "Standard_LRS"
                }
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('dc3NicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',variables('storageAccountNamePrefix'),'.blob.core.windows.net')]"
          }
        }
      },
      "resources": [
        {
          "apiVersion": "[providers('Microsoft.DevTestLab','labs').apiVersions[0]]",
          "type": "microsoft.devtestlab/schedules",
          "name": "[concat('shutdown-computevm-',variables('dc3VMName'))]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('dc3VMName'))]"
          ],
          "properties": {
            "status": "Enabled",
            "taskType": "ComputeVmShutdownTask",
            "dailyRecurrence": {
             "time": "1800"
            },
            "timeZoneId": "Pacific Standard Time",
            "notificationSettings": {
              "status": "Disabled",
              "timeInMinutes": 15
            },
            "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', variables('dc3VMName'))]"
          }
        },
        {
          "type": "extensions",
          "name": "Microsoft.Powershell.DSC",
          "apiVersion": "2015-05-01-preview",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('dc3VMName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.20",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "configuration": {
                "url": "[variables('dcSecondaryInstallModule').url]",
                "script": "[variables('dcSecondaryInstallModule').script]",
                "function": "[variables('dcSecondaryInstallModule').function]"
              },
              "configurationArguments": {
                "DiskSize": "[parameters('DiskSizes')]",
                "DisksizeGB": "5",
                "domainName": "[variables('domainName')]",              
                "dnsServer": "[variables('dc1NicIPAddress')]",
                "dataDisks": "[string(variables('datadisks'))]",
                "site": "[toUpper(variables('CSubnetName'))]",
                "RetryCount": "[variables('RetryCount')]",
                "RetryIntervalSec": "[variables('RetryIntervalSec')]"                         
              }
            },
            "protectedSettings": {
              "configurationUrlSasToken": "[parameters('_artifactsLocationSasToken')]",
              "configurationArguments": {
                "DomainAdminCredential": {
                  "UserName": "[concat(variables('domainNetbiosName'), '\\', parameters('adminUserName'))]",
                  "Password": "[parameters('adminPassword')]"
                }
              }
            }
          }
        }
      ]
    }
  ],
  "outputs": {}


}